// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const BuyableUser = sequelize.define('buyableUser', {
    id: {
      type: DataTypes.UUID,
      primaryKey: true,
    },
    fullName: {
      type: DataTypes.STRING,
    },
    email: {
      type: DataTypes.STRING,
    },
    phoneNumber: {
      type: DataTypes.STRING,
    },
    verified: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'buyable_user',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  BuyableUser.associate = (models) => {
    BuyableUser.belongsToMany(models.product, {
      through: 'favoriteProducts',
      foreignKey: 'user_id',
      otherKey: 'product_id',
    });
    BuyableUser.hasMany(models.searchLog, {
      foreignKey: {
        name: 'userIdKey',
        field: 'user_id',
      },
      as: 'userSearchLogs',
    });
    BuyableUser.hasMany(models.userVerification, {
      foreignKey: {
        name: 'userIdKey',
        field: 'user_id',
      },
      as: 'userUserVerifications',
    });
  };

  return BuyableUser;
};
